{"version":3,"sources":["places/pages/UpdatePlace.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/utils/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/UIElements/Input/Input.js","shared/components/UIElements/Input/Input.module.scss","shared/hooks/FormHook.js","places/pages/PlaceForm.module.scss"],"names":["UpdatePlace","props","placeId","useParams","auth","useContext","AuthContext","history","useHistory","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedPlace","setLoadedPlace","useForm","title","value","isValid","description","formState","inputHandler","setFormData","useEffect","then","res","data","place","Fragment","header","show","close","centered","className","styles","container","sticker","heading","desc","PlaceForm","onSubmit","e","preventDefault","inputs","Authorization","token","push","loggedUserId","formContent","id","element","type","label","errorText","validators","VALIDATOR_REQUIRE","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","size","inverse","disabled","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","configurable","writable","val","VALIDATOR_EMAIL","validate","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","inputState","dispatch","changeHandler","touchHandler","input","placeholder","required","onChange","onBlur","bar","textArea","rows","FormControl","invertedColors","Inverted","Valid","Invalid","htmlFor","module","exports","formReducer","formIsValid","inputId","initialInputs","initialValidity","useCallback","inputData","formValidity"],"mappings":"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","file":"static/js/5.8e7a9c45.chunk.js","sourcesContent":["import React, {useEffect, useState, useContext} from 'react';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\n\r\nimport styles from './PlaceForm.module.scss';\r\nimport Input from \"../../shared/components/UIElements/Input/Input\";\r\nimport {VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE} from \"../../shared/utils/validators\";\r\nimport Button from \"../../shared/components/UIElements/Button/Button\";\r\nimport ButtonPanel from \"../../shared/components/UIElements/Button/ButtonPanel\";\r\nimport {useForm} from \"../../shared/hooks/FormHook\";\r\nimport {useHttpClient} from \"../../shared/hooks/HttpHook\";\r\nimport Spinner from \"../../shared/components/UIElements/Spinner/Spinner\";\r\nimport Modal from \"../../shared/components/UIElements/Modals/Modal\";\r\nimport {AuthContext} from \"../../shared/context/auth-context\";\r\n\r\nconst UpdatePlace = props => {\r\n    const placeId = useParams().placeId;\r\n    const auth = useContext(AuthContext);\r\n    const history = useHistory();\r\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n    const [loadedPlace, setLoadedPlace] = useState();\r\n\r\n    const [formState, inputHandler, setFormData] = useForm({\r\n        title: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        description: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false);\r\n\r\n    useEffect(() => {\r\n        const requestPlace = () => {\r\n            sendRequest(`api/places/${placeId}`).then((res) => {\r\n                setLoadedPlace(res.data.place);\r\n                setFormData({\r\n                    title: {\r\n                        value: res.data.place.title,\r\n                        isValid: true\r\n                    },\r\n                    description: {\r\n                        value: res.data.place.description,\r\n                        isValid: true\r\n                    }\r\n                }, true)\r\n            })\r\n        };\r\n        requestPlace();\r\n    }, [setFormData, placeId, sendRequest])\r\n\r\n    const updateSubmitHandler = e => {\r\n        e.preventDefault();\r\n        sendRequest(`api/places/${placeId}`, 'PATCH', {\r\n            title: formState.inputs.title.value,\r\n            description: formState.inputs.description.value\r\n        }, {Authorization: 'Bearer ' + auth.token}).then(() => {\r\n            history.push(`/${auth.loggedUserId}/places`)\r\n        })\r\n    }\r\n\r\n    return (<React.Fragment>\r\n            <Modal\r\n                header=\"Searching place error\"\r\n                show={!!error}\r\n                close={clearError}>\r\n                <p>{error}</p>\r\n            </Modal>\r\n\r\n            {isLoading && <Spinner centered/>}\r\n\r\n            {!isLoading && loadedPlace && <div className={styles.container}>\r\n                <div className={styles.sticker}>\r\n                    <h2 className={styles.heading}>Update place</h2>\r\n                    <p className={styles.desc}>Got an idea to edit some place? Nice! Users should have an up-to-date\r\n                        info!</p>\r\n                </div>\r\n                <form className={styles.PlaceForm} onSubmit={updateSubmitHandler}>\r\n                    <div className={styles.formContent}>\r\n                        <Input id='title' element='input' type='text' label='Title'\r\n                               errorText='Enter a valid name' validators={[VALIDATOR_REQUIRE()]}\r\n                               onInput={inputHandler}\r\n                               initialValue={loadedPlace.title}\r\n                               initialValid={true}/>\r\n                        <Input id='description' element='textarea' type='text' label='Description'\r\n                               errorText='Enter some description (>5 characters)' validators={[VALIDATOR_MINLENGTH(5)]}\r\n                               onInput={inputHandler}\r\n                               initialValue={loadedPlace.description}\r\n                               initialValid={true}/>\r\n                    </div>\r\n                    <ButtonPanel>\r\n                        <Button size='big' type='submit' inverse disabled={!formState.isValid}>Update place</Button>\r\n                    </ButtonPanel>\r\n                </form>\r\n            </div>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdatePlace","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n    type: VALIDATOR_TYPE_MINLENGTH,\r\n    val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n    type: VALIDATOR_TYPE_MAXLENGTH,\r\n    val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n    let isValid = true;\r\n    for (const validator of validators) {\r\n        if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n            isValid = isValid && value.trim().length > 0;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n            isValid = isValid && value.trim().length >= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n            isValid = isValid && value.trim().length <= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MIN) {\r\n            isValid = isValid && +value >= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_MAX) {\r\n            isValid = isValid && +value <= validator.val;\r\n        }\r\n        if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n            isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n        }\r\n    }\r\n    return isValid;\r\n};","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, {useReducer, useEffect} from 'react';\r\n\r\nimport styles from './Input.module.scss';\r\nimport {validate} from \"../../../utils/validators\";\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n        case 'TOUCH':\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nconst Input = props => {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || '',\r\n        isValid: props.initialValid || false,\r\n        isTouched: false\r\n    });\r\n\r\n    const {id, onInput} = props;\r\n    const {value, isValid} = inputState;\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput])\r\n\r\n    const changeHandler = e => {\r\n        dispatch({type: 'CHANGE', val: e.target.value, validators: props.validators})\r\n    };\r\n    const touchHandler = () => {\r\n        dispatch({type: 'TOUCH'})\r\n    };\r\n\r\n    const input = <React.Fragment>\r\n        <input id={props.id} type={props.type} placeholder={props.placeholder}\r\n               required onChange={changeHandler} value={inputState.value}\r\n               onBlur={touchHandler}/>\r\n        <span className={styles.bar}></span>\r\n    </React.Fragment>;\r\n    const textArea = <textarea id={props.id} rows={props.rows || 3}\r\n                               required onChange={changeHandler}\r\n                               value={inputState.value} onBlur={touchHandler}/>;\r\n\r\n    return <div className={`${styles.FormControl} ${props.invertedColors ? styles.Inverted : ''} ${inputState.isTouched ?\r\n        inputState.isValid ? styles.Valid : styles.Invalid : ''}`}>\r\n        {props.element === 'textarea' ? textArea : input}\r\n        <label htmlFor={props.id}>{props.label}</label>\r\n        {!inputState.isValid && inputState.isTouched && <p className={styles.errorText}>{props.errorText}</p>}\r\n    </div>\r\n};\r\n\r\nexport default Input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"Input_FormControl__3Dlx1\",\"bar\":\"Input_bar__3HdQJ\",\"errorText\":\"Input_errorText__17C5H\",\"Inverted\":\"Input_Inverted__3WUjH\",\"Valid\":\"Input_Valid__1kgL0\",\"Invalid\":\"Input_Invalid__2sHoH\"};","import {useCallback, useReducer} from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                if (!state.inputs[inputId]) {\r\n                    continue;\r\n                }\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: {\r\n                        value: action.value, isValid: action.isValid\r\n                    }\r\n                },\r\n                isValid: formIsValid\r\n            }\r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialValidity\r\n    });\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({type: 'INPUT_CHANGE', inputId: id, value, isValid})\r\n    }, []);\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        })\r\n    }, [])\r\n\r\n    return [formState, inputHandler, setFormData]\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PlaceForm_container__2OWgO\",\"sticker\":\"PlaceForm_sticker__32CQS\",\"heading\":\"PlaceForm_heading__yshwY\",\"desc\":\"PlaceForm_desc__23-U9\",\"PlaceForm\":\"PlaceForm_PlaceForm__2VOsN\",\"spinner\":\"PlaceForm_spinner__1s6GC\",\"formContent\":\"PlaceForm_formContent__3iDOq\"};"],"sourceRoot":""}