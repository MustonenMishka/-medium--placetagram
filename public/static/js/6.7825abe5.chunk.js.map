{"version":3,"sources":["places/pages/UserPlaces.js"],"names":["UserPlaces","useState","loadedPlaces","setLoadedPlaces","useHttpClient","isLoading","error","sendRequest","clearError","userId","useParams","useEffect","a","res","data","places","requestPlaces","Fragment","header","show","close","centered","items","errorModalText","itemType","onDeleteItem","deletedId","prevPlaces","filter","place","id"],"mappings":"wMAyCeA,UAjCI,WAAO,IAAD,EACmBC,qBADnB,mBACdC,EADc,KACAC,EADA,OAE+BC,cAA7CC,EAFc,EAEdA,UAAWC,EAFG,EAEHA,MAAOC,EAFJ,EAEIA,YAAaC,EAFjB,EAEiBA,WAChCC,EAASC,cAAYD,OAE3BE,qBAAU,YACa,uCAAG,4BAAAC,EAAA,sEACAL,EAAY,mBAAD,OAAoBE,IAD/B,OACZI,EADY,OAElBV,EAAgBU,EAAIC,KAAKC,QAFP,2CAAH,qDAInBC,KACD,CAACT,EAAaE,IAMjB,OAAQ,kBAAC,IAAMQ,SAAP,KACA,kBAAC,IAAD,CACIC,OAAO,uBACPC,OAAQb,EACRc,MAAOZ,GACP,2BAAIF,IAEPD,GAAa,kBAAC,IAAD,CAASgB,UAAQ,KAC7BhB,GAAaH,GAAgB,kBAAC,IAAD,CAAUoB,MAAOpB,EACPqB,eAAe,mBACfC,SAAS,QACTC,aAftB,SAACC,GACxBvB,GAAgB,SAAAwB,GAAU,OAAIA,EAAWC,QAAO,SAAAC,GAAK,OAAIA,EAAMC,KAAOJ","file":"static/js/6.7825abe5.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nimport ItemList from \"../../shared/components/ItemList/ItemList\";\r\nimport {useHttpClient} from \"../../shared/hooks/HttpHook\";\r\nimport Modal from \"../../shared/components/UIElements/Modals/Modal\";\r\nimport Spinner from \"../../shared/components/UIElements/Spinner/Spinner\";\r\n\r\nconst UserPlaces = () => {\r\n    const [loadedPlaces, setLoadedPlaces] = useState();\r\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n    const userId = useParams().userId;\r\n\r\n    useEffect(() => {\r\n        const requestPlaces = async () => {\r\n            const res = await sendRequest(`api/places/user/${userId}`);\r\n            setLoadedPlaces(res.data.places);\r\n        };\r\n        requestPlaces();\r\n    }, [sendRequest, userId]);\r\n\r\n    const placeDeleteHandler = (deletedId) => {\r\n        setLoadedPlaces(prevPlaces => prevPlaces.filter(place => place.id !== deletedId))\r\n    }\r\n\r\n    return (<React.Fragment>\r\n            <Modal\r\n                header=\"Places loading error\"\r\n                show={!!error}\r\n                close={clearError}>\r\n                <p>{error}</p>\r\n            </Modal>\r\n            {isLoading && <Spinner centered/>}\r\n            {!isLoading && loadedPlaces && <ItemList items={loadedPlaces}\r\n                                                     errorModalText='No places yet...'\r\n                                                     itemType='place'\r\n                                                     onDeleteItem={placeDeleteHandler}/>}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default UserPlaces;"],"sourceRoot":""}